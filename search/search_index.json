{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"about/","title":"ABOUT ANDRES","text":"<p>este es el contenido del about .md</p>"},{"location":"pract1/","title":"Creacion_completa_pila_LAMP","text":""},{"location":"pract1/#creacion-de-una-maquina-en-un-laboratorio-de-aws","title":"Creaci\u00f3n de una maquina en un laboratorio de AWS.","text":"<p>1\u00ba Lo primero que tenemos que hacer es Lanzar la instancia.</p> <p></p> <p>2\u00ba Seleccionamos el S.O., que en este caso es Ubuntu.</p> <p> 3\u00ba Elegimos el tipo de instancia.</p> <p></p> <p>4\u00ba Seleccionamos el par de claves que nosotros ya hemos descargado antes de iniciar el laboratorio. Nosotros la renombramos y seleccionamos Vockey.pem (la cual tendr\u00e1 que tener los permisos cambiados).</p> <p></p> <p>5\u00ba  Al grupo de seguridad le a\u00f1adimos todos los servicios y la lanzamos:</p> <p></p>"},{"location":"pract1/#asignar-una-ip-a-nuestra-instancia","title":"Asignar una Ip a nuestra instancia.","text":"<p>1\u00ba Nos vamos a Direcciones IP estaticas y asignamos una nueva IP elastica:</p> <p></p> <p>2\u00ba Asignamos la IP</p> <p></p> <p>3\u00ba Una vez tenemos la IP, solo queda Asignarle a esta una instancia.</p> <p></p> <p>4\u00ba Seleccionamos la instancia y la asociamos. As\u00ed cada vez que reiniciemos el laboriatorio no cambiar\u00e1 la IP de la instancia.</p> <p></p>"},{"location":"pract1/#instalacion-de-la-pila-lamp","title":"Instalaci\u00f3n de la pila LAMP","text":"<p>Antes de empezar, hay que recordar que queremos ver la ejecuci\u00f3n de todos los comandos (set -x) y actualizamos los repositorios y paquetes. (sudo apt update) \\ (sudo upgrade -y)</p> <p>1\u00ba Instalamos y actualiamos el servidor WEB Apache 2.4</p> <pre><code>sudo apt install apache2 -y\n\n</code></pre> <p>2\u00ba Comprobamos el estado del Apache</p> <pre><code>sudo systemctl status apache2\n\n</code></pre> <p>3\u00ba Instalamos MySql para gestionar las bases de datos.</p> <pre><code>sudo apt install mysql-server -y\n\n</code></pre> <p>4\u00ba Instalaci\u00f3n modulos php</p> <pre><code>sudo apt install php libapache2-mod-php php-mysql -y\n\n</code></pre> <p>5\u00ba Copiar el directorio de configuraci\u00f3n de Apache</p> <pre><code>cp ../conf/000-default.conf /etc/apache2/sites-available\n\n</code></pre> <p>6\u00ba Reiniciamos el servicio Apache.</p> <pre><code>sudo systemctl restart apache2\n\n</code></pre> <p>7\u00ba Copiamos el archivo de prueva de PHP</p> <pre><code>cp ../php/index.php /var/www/html\n\n</code></pre> <p>8\u00ba Modificamos el propietario y el grupo del directorio /var/www/html</p> <pre><code>sudo chown -R www-data:www-data /var/www/html\n\n</code></pre>"},{"location":"pract1/#instalacion-de-la-herramientas-adicionales","title":"Instalaci\u00f3n de la herramientas adicionales.","text":"<p>Antes de empezar, hay que recordar que queremos ver la ejecuci\u00f3n de todos los comandos (set -x) </p> <p>1\u00ba Configuramos la variables.</p> <pre><code>PHPMYADMIN_APP_PASSWORD=usuario\nAPP_USER=usuario\nAPP_PASSWORD=contrase\u00f1a\n\n</code></pre> <p>2\u00ba Actualizamos el sistema.</p> <pre><code>sudo update -y\n\n</code></pre> <p>3\u00ba Actualizamos los paquetes.</p> <pre><code>sudo upgrade -y\n\n</code></pre> <p>4\u00ba Configuramos las respuestas de las preguntas durante la instalaci\u00f3n de Phpmyadmin.</p> <pre><code>echo \"phpmyadmin phpmyadmin/reconfigure-webserver multiselect apache2\" | debconf-set-selections\necho \"phpmyadmin phpmyadmin/dbconfig-install boolean true\" | debconf-set-selections\necho \"phpmyadmin phpmyadmin/mysql/app-pass password $PHPMYADMIN_APP_PASSWORD\" | debconf-set-selections\necho \"phpmyadmin phpmyadmin/app-password-confirm password $PHPMYADMIN_APP_PASSWORD\" | debconf-set-selections\n\n</code></pre> <p>5\u00ba Instalamos PHPMYADMIN.</p> <pre><code>sudo apt install phpmyadmin php-mbstring php-zip php-gd php-json php-curl -y\n\n</code></pre> <p>6\u00ba Creamos un usuario que tenga acceso a todas las bases de datos.</p> <pre><code>mysql -u root &lt;&lt;&lt; \"DROP USER IF EXITS 'APP_USER'@'%'\"\nmysql -u root &lt;&lt;&lt; \"CREATE USER' $APP_USER''@''%' IDENTIFIED BY ' $APP_PASSWORD'\"\nmysql -u root &lt;&lt;&lt; \"GRANT ALL PRIVILEGES ON *.* TO '$APP_USER'@'%'\"\n\n</code></pre> <p>7\u00ba Instalamos phpmyAdmin</p> <pre><code>apt install phpmyadmin php-mbstring php-zip php-json php-curl -y\n\n</code></pre> <p>8\u00ba Instalacion de Adminer(aplicacion gestions de base de datos online, github en este caso)</p> <pre><code>wget https://github.com/vrana/adminer/releases/download/v4.8.1/adminer-4.8.1-mysql.php\n\n</code></pre> <p>9\u00ba Creamos directorio para Adminer.</p> <pre><code>mkdir -p /var/www/html/adminer\n\n</code></pre> <p>10\u00ba Movemos y renombramos el archivo.</p> <pre><code>mv adminer-4.8.1-mysql.php /var/www/html/adminer/index.php\n\n</code></pre> <p>11\u00ba Instalamos GoAccess</p> <pre><code>echo \"deb http://deb.goaccess.io/ $(lsb_release -cs) main\" | sudo tee -a /etc/apt/sources.list.d/goaccess.list\n\n</code></pre> <p>12\u00ba A\u00f1adimos clave publiaca en la maquina</p> <pre><code>wget -O - https://deb.goaccess.io/gnugpg.key | sudo apt-key add -\n\n</code></pre> <p>13\u00ba Actualizamos los repositorios.</p> <pre><code>apt update\n\n</code></pre> <p>14\u00ba Instalamos GoAccess</p> <pre><code>apt install goaccess -y\n\n</code></pre> <p>15\u00ba Creamos el directorio stats.</p> <pre><code>mkdir -p /var/www/html/stats\n\n</code></pre> <p>16\u00ba Modificamos permisos</p> <pre><code>chown www-data:www-data /var/www/html -R\n\n</code></pre> <p>17\u00ba Ejecutamos Goacces en segundo plano.</p> <pre><code>goaccess /var/log/apache2/access.log -o /var/www/html/stats/index.html --log-format=COMBINED --real-time-html --daemonize\n\n</code></pre> <p>18\u00ba Reiniciamos el servicio de Apache  ```` systemctl restart apache2</p> <p>````</p> <p>19\u00ba Copiamos el archivo htacces en /var/www/html/stats.</p> <p>```` cp ../htaccess/htaccess /var/html/stats/.htaccess</p> <p>````</p> <p>20\u00ba Copiamos el archivo de la configuraci\u00f3n de Apache.</p> <p>````  cp ../conf/000-default-htaccess.conf /etc/apache2/sites-avariable/000-default.conf</p> <p>````</p> <p>21\u00ba Reiniciamos el servicio de Apache</p> <p>```` sudo systemctl restart apache2.service</p> <p>````</p> <p></p>"},{"location":"pract2/","title":"Instalacion_PilaLAMP_enRHEL","text":""},{"location":"pract2/#creacion_completa_pila_lamp","title":"Creacion_completa_pila_LAMP","text":""},{"location":"pract2/#creacion-de-una-maquina-en-un-laboratorio-de-aws","title":"Creaci\u00f3n de una maquina en un laboratorio de AWS.","text":"<p>1\u00ba Lo primero que tenemos que hacer es Lanzar la instancia.</p> <p></p> <p>2\u00ba Seleccionamos el S.O., que en este caso es Rethat.</p> <p></p> <p>3\u00ba Elegimos el tipo de instancia. ( Minimo 4 Gb de RAM ).</p> <p></p> <p>4\u00ba Seleccionamos el par de claves que nosotros ya hemos descargado antes de iniciar el laboratorio. Nosotros la renombramos y seleccionamos Vockey.pem (la cual tendr\u00e1 que tener los permisos cambiados).</p> <p></p> <p>5\u00ba  Al grupo de seguridad le a\u00f1adimos todos los servicios y la lanzamos:</p> <p></p>"},{"location":"pract2/#asignar-una-ip-a-nuestra-instancia","title":"Asignar una Ip a nuestra instancia.","text":"<p>1\u00ba Nos vamos a Direcciones IP estaticas y asignamos una nueva IP elastica:</p> <p></p> <p>2\u00ba Asignamos la IP</p> <p></p> <p>3\u00ba Una vez tenemos la IP, solo queda Asignarle a esta una instancia.</p> <p></p> <p>4\u00ba Seleccionamos la instancia y la asociamos. As\u00ed cada vez que reiniciemos el laboriatorio no cambiar\u00e1 la IP de la instancia.</p> <p></p>"},{"location":"pract2/#instalacion-de-la-pila-lamp","title":"Instalaci\u00f3n de la pila LAMP","text":"<p>Lo primero de todo configuramos el script para que se muestren los comandos que que se ejecutan ( set -x )  y actualizamos los paquetes ( dnf update -y ).</p> <p>1\u00ba Instalamos Apache.</p> <pre><code>sudo dnf install httpd -y\n\n</code></pre> <p>2\u00ba Reiniciamos el servicio.</p> <pre><code>sudo systemctl start httpd\n\n</code></pre> <p>3\u00ba Habilitar el servicio para que se inicie autom\u00e1ticamente despu\u00e9s de cada reinicio.</p> <pre><code>sudo systemctl enable httpd\n\n</code></pre> <p>4\u00ba  Comprobamos el estado.</p> <pre><code>sudo systemctl status httpd\n\n</code></pre> <p>5\u00ba Instalamos el sistema gestor de base de datos MySQL.</p> <pre><code>sudo dnf install mysql-server -y\n\n</code></pre> <p>6\u00ba Iniciamos el servicio.</p> <pre><code>sudo systemctl start mysqld\n\n</code></pre> <p>7\u00ba Iniciamos el servicio para que se inicie automaticamente.</p> <pre><code>sudo systemctl enable mysqld\n\n</code></pre> <p>8\u00ba Comprobamos si esta iniciado.</p> <pre><code>sudo systemctl status httpd\n\n</code></pre> <p>9\u00ba Instalamos el interprete de comandos PHP.</p> <pre><code>sudo dnf install php -y\n\n</code></pre> <p>10\u00ba Instalamos la extensi\u00f3n de PHP para MySql.</p> <pre><code>sudo dnf install php-mysqlnd -y\n\n</code></pre> <p>11\u00ba Reiniciamos el servicio Apache.</p> <pre><code>sudo systemctl restart httpd\n\n</code></pre> <p>12\u00ba Copiamos el archivo info.php en /var/www/html.</p> <pre><code>sudo cp ../php/info.php /var/www/html\n\n</code></pre> <p>13\u00ba Cambiamos el propietario y el grupo de directorio /var/www/html</p> <pre><code>chown -R apache:apache /var/www/html\n\n</code></pre>"},{"location":"pract2/#archivo-de-las-variables-env","title":"Archivo de las variables (.env)","text":"<pre><code>PMA_USER=andres\nPMA_PASS=Afruruz738\nPMA_DB=phpmyadmin\n\n</code></pre>"},{"location":"pract2/#instalacion-de-las-herramientas-adicionales-de-la-pila-lamp","title":"Instalaci\u00f3n de las herramientas adicionales de la pila LAMP.","text":"<p>Lo primero de todo configuramos el script para que se muestren los comandos que que se ejecutan ( set -x ).</p> <p>1\u00ba Declaramos la variables.</p> <pre><code>source .env\n\n</code></pre> <p>2\u00ba Actualizamos los paquetes.</p> <pre><code>dnf update -y\n\n</code></pre> <p>3\u00ba Instalamos los modulos necesarios para la instalacion de PHPMYADMIN.</p> <pre><code>sudo dnf install php-mbstring php-zip php-json php-gd php-fpm php-xml -y\n\n</code></pre> <p>4\u00ba Reiniciamos el servicio Apache.</p> <pre><code>sudo systemctl restart httpd\n\n</code></pre> <p>5\u00ba Instalamos la utilidad wget para poder descomprimir PHPMYADMIN.</p> <pre><code>sudo dnf install wget -y\n\n</code></pre> <p>6\u00ba Eliminamos descargas previas de PhpMyAdmin.</p> <pre><code>rm -rf /tmp/phpMyAdmin-5.2.1-all-languages.zip\n\n</code></pre> <p>7\u00ba Eliminamos instalaciones previas de phpMyAdmin.</p> <pre><code>rm -rf /var/www/html/phpmyadmin\n\n</code></pre> <p>8\u00ba Descargamos el codigo fuente de PHPMYADMIN.</p> <pre><code>sudo wget https://files.phpmyadmin.net/phpMyAdmin/5.2.1/phpMyAdmin-5.2.1-all-languages.zip -P /tmp\n\n</code></pre> <p>9\u00ba Descargamos la utilidad Unzip.</p> <pre><code>sudo dnf install unzip -y\n\n</code></pre> <p>10\u00ba Descomprimimos el Zip recien descargado.</p> <pre><code>unzip -u /tmp/phpMyAdmin-5.2.1-all-languages.zip -d /var/www/html\n\n</code></pre> <p>11\u00ba Renombramos el direcctorio de PhpMyAdmin.</p> <pre><code>mv /var/www/html/phpMyAdmin-5.2.1-all-languages /var/www/html/phpmyadmin\n\n</code></pre> <p>12\u00ba Actualizamos los permisos del directorio /var/www/html.</p> <pre><code>sudo chown -R apache:apache /var/www/html\n\n</code></pre> <p>13\u00ba Creamos el archivo de configuraci\u00f3n a partir del archivo de ejemplo.</p> <pre><code>sudo cp /var/www/html/phpmyadmin/config.sample.inc.php /var/www/html/phpmyadmin/config.inc.php\n\n</code></pre> <p>14\u00ba  Generamos un valor aleatorio de 32 caracteres para la variable blowfish_secret.</p> <pre><code>RANDOM_VALUE=`openssl rand -hex 16`\n\n</code></pre> <p>15\u00ba Cambiamos dentro del archivo de configuraci\u00f3n para qu nos quite el fallo cuando nos conectamos a phpmyadmin. Modificamos la variable blowfish_secret en el archivo de configuraci\u00f3n.</p> <pre><code>sed -i \"s/\\(\\$cfg\\['blowfish_secret'\\] =\\).*/\\1 '$RANDOM_VALUE';/\" /var/www/html/phpmyadmin/config.inc.php\n\nsed \"/blowfish_secret/a \\$cfg\\['TempDir'\\] = '/tmp';\" /var/ww/html/phpmyadmin/config.inc.php\n\n</code></pre> <p>16\u00ba Eliminamos si existe alguna base de datos previa de phpMyAdmin.</p> <pre><code>mysql -u  root &lt;&lt;&lt; \"DROP DATABASE IF EXITS phpmyadmin\"\n\n</code></pre> <p>17\u00ba Importamos el scrit de creaci\u00f3n de base de datos de phpmyadmin.</p> <pre><code>sudo mysql -u root &lt; /var/www/html/phpmyadmin/sql/create_tables.sql\n\n</code></pre> <p>18\u00ba Creamos el usuario para la base de datos y le damos privilegios.</p> <pre><code>sudo mysql -u root &lt;&lt;&lt; \"DROP USER IF EXISTS $PMA_USER@'%'\"\nsudo mysql -u root &lt;&lt;&lt; \"CREATE USER $PMA_USER@'%' IDENTIFIED BY '$PMA_PASS'\"\nsudo mysql -u root &lt;&lt;&lt; \"GRANT ALL PRIVILEGES ON $PMA_DB.* TO $PMA_USER@'%'\"\n\n\n</code></pre>"}]}